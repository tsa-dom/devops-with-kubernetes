apiVersion: argoproj.io/v1alpha1
kind: Rollout
metadata:
  namespace: project
  name: dwk-backend
spec:
  replicas: 1
  selector:
    matchLabels:
      app: todo-backend
  strategy:
    canary:
      steps:
      - analysis:
          templates:
          - templateName: cpu-usage
      - setWeight: 25
      - pause:
          duration: 30s
      - setWeight: 50
      - pause:
          duration: 30s
  template:
    metadata:
      labels:
        app: todo-backend
    spec:
      containers:
        - name: cloud-sql-proxy
          image: gcr.io/cloudsql-docker/gce-proxy:1.17
          command:
            - "/cloud_sql_proxy"
            - "-instances=dwk-gke-333411:europe-north1:postgres=tcp:5432"
            - "-credential_file=/secrets/service_account.json"
          securityContext:
            runAsNonRoot: true
          resources:
            requests:
              memory: "500Mi"
          volumeMounts:
            - name: psql-secret
              mountPath: /secrets/
              readOnly: true
        - name: todo-backend
          image: PROJECT/BACKEND
          resources:
            requests:
              cpu: "28m"
              memory: "100Mi"
            limits:
              cpu: "28m"
              memory: "100Mi"
          volumeMounts:
            - name: shared-image
              mountPath: /usr/app/files
          readinessProbe:
            initialDelaySeconds: 10
            periodSeconds: 5
            httpGet:
               path: /healthz
               port: 8080
          livenessProbe:
            httpGet:
              path: /healthz
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 30
            timeoutSeconds: 5
          ports:
            - containerPort: 8080
          env:
            - name: PGHOST
              valueFrom:
                configMapKeyRef:
                  name: config-file
                  key: PG_HOST
            - name: PGDATABASE
              valueFrom:
                configMapKeyRef:
                  name: config-file
                  key: PG_DATABASE
            - name: PGPORT
              valueFrom:
                configMapKeyRef:
                  name: config-file
                  key: PG_PORT
            - name: PGUSER
              valueFrom:
                secretKeyRef:
                  name: secrets
                  key: PG_USER
            - name: PGPASSWORD
              valueFrom:
                secretKeyRef:
                  name: secrets
                  key: PG_PASSWORD
      volumes:
      - name: psql-secret
        secret:
          secretName: psql-sa-key
      - name: shared-image
        persistentVolumeClaim:
          claimName: image-claim